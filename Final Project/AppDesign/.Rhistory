knitr::opts_chunk$set(echo = TRUE)
library(shiny); runApp('C:/Users/Spencer/Desktop/MedtroidJam/BFIX-551-Final-project/Final Project/app1.R')
install.packages("shiny")
library(shiny); runApp('C:/Users/Spencer/Desktop/MedtroidJam/BFIX-551-Final-project/Final Project/app1.R')
install.packages("shiny")
library(shiny); runApp('C:/Users/Spencer/Desktop/MedtroidJam/BFIX-551-Final-project/Final Project/app1.R')
install.packages("shiny")
library(shiny); runApp('C:/Users/Spencer/Desktop/MedtroidJam/BFIX-551-Final-project/Final Project/app1.R')
install.packages("shiny")
library(shiny); runApp('C:/Users/Spencer/Desktop/MedtroidJam/BFIX-551-Final-project/Final Project/app1.R')
install.packages("shiny")
library(shiny); runApp('C:/Users/Spencer/Desktop/MedtroidJam/BFIX-551-Final-project/Final Project/app1.R')
install.packages("shiny")
library(shiny); runApp('C:/Users/Spencer/Desktop/MedtroidJam/BFIX-551-Final-project/Final Project/app1.R')
install.packages("shiny")
install.packages(c("tidyverse", "leaflet", "sf", "ggplot2", "shiny.", "tidycensus"))
library(shiny); runApp('C:/Users/Spencer/Desktop/MedtroidJam/BFIX-551-Final-project/Final Project/app1.R')
knitr::opts_chunk$set(echo = TRUE)
library(tidycensus)
##Way to check if already downloaded, and if not, download it:
if (!require(tidycensus)) install.packages("tidycensus"); require(tidycensus)
#Also installing packages needed for examples here:
if (!require(tidyverse)) install.packages("tidyverse"); require(tidyverse)
if (!require(ggplot2)) install.packages("ggplot2"); require(ggplot2)
census_api_key("308afb6a1b31e9fca538c651400ae9f1c3026131", install = TRUE)
readRenviron("~/.Renviron")
#For the 2000 and 2010 and 2020(default) census datasets
#Used to fill a dataframe w data:
age20 <- get_decennial(geography = "state",  #Filter data by state
variables = "P13_001N", #What statistic are we looking for, this means average age (SEE BELOW)
year = 2020,  #year you want the data from
sumfile = "dhc")   #Where do we want the data to come from, this is Demographic and Housing Characteristics
age20
#PLOTTING IT
age20 %>%
ggplot(aes(x = value, y = reorder(NAME, value))) +
geom_point()
#American Community Survey (ACS) --
#data are available from the 1-year ACS since 2005 for geographies of population 65,000 and greater, and from the 5-year ACS for all geographies down to the block group level starting with the 2005-2009 dataset.
#THIS DATA IS BASED ON SAMPLING NOT POP LIKE DECENNIAL but is yearly
vt <- get_acs(geography = "county",
variables = c(medincome = "B19013_001"),
state = "VT",
year = 2021)
vt
#Graphing
vt %>%
mutate(NAME = gsub(" County, Vermont", "", NAME)) %>%
ggplot(aes(x = estimate, y = reorder(NAME, estimate))) +
geom_errorbarh(aes(xmin = estimate - moe, xmax = estimate + moe)) +
geom_point(color = "red", size = 3) +
labs(title = "Household income by county in Vermont",
subtitle = "2017-2021 American Community Survey",
y = "",
x = "ACS estimate (bars represent margin of error)")
v17 <- load_variables(2017, "acs5", cache = TRUE)
#2017 data, ACS5 = the 5 year sample or ACS1 = one year sample, cashe = save the data for easier loading.
View(v17)  ## view the variable codes for the set above, and can be used in get_decennial(geography = "state", variables = "USED HERE")
# or in get_acs(geography = "state", variables = "USED HERE")
runApp('C:/Users/Spencer/Desktop/MedtroidJam/BFIX-551-Final-project/Final Project/app1.R')
runApp('C:/Users/Spencer/Desktop/MedtroidJam/BFIX-551-Final-project/Final Project/app1.R')
library(shiny); runApp('C:/Users/Spencer/Desktop/MedtroidJam/BFIX-551-Final-project/Final Project/app1.R')
runApp('C:/Users/Spencer/Desktop/MedtroidJam/BFIX-551-Final-project/Final Project/AppDesign')
runApp('C:/Users/Spencer/Desktop/MedtroidJam/BFIX-551-Final-project/Final Project/AppDesign')
runApp('C:/Users/Spencer/Desktop/MedtroidJam/BFIX-551-Final-project/Final Project/app1.R')
runApp('C:/Users/Spencer/Desktop/MedtroidJam/BFIX-551-Final-project/Final Project/AppDesign')
runApp('C:/Users/Spencer/Desktop/MedtroidJam/BFIX-551-Final-project/Final Project/AppDesign')
runApp('C:/Users/Spencer/Desktop/MedtroidJam/BFIX-551-Final-project/Final Project/AppDesign')
runApp('C:/Users/Spencer/Desktop/MedtroidJam/BFIX-551-Final-project/Final Project/AppDesign')
runApp('C:/Users/Spencer/Desktop/MedtroidJam/BFIX-551-Final-project/Final Project/AppDesign')
runApp('C:/Users/Spencer/Desktop/MedtroidJam/BFIX-551-Final-project/Final Project/AppDesign')
runApp('C:/Users/Spencer/Desktop/MedtroidJam/BFIX-551-Final-project/Final Project/AppDesign')
runApp('C:/Users/Spencer/Desktop/MedtroidJam/BFIX-551-Final-project/Final Project/AppDesign')
runApp('C:/Users/Spencer/Desktop/MedtroidJam/BFIX-551-Final-project/Final Project/AppDesign')
setwd("C:/Users/Spencer/Desktop/MedtroidJam/BFIX-551-Final-project/Final Project/AppDesign")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
gc()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
